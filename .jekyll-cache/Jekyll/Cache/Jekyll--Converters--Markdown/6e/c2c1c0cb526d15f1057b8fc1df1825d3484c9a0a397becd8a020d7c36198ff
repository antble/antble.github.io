I"e<p>Elements of computing is one of the most comprehensive course I’ve taken online.</p>

<p>The book used is <em>The Elements of Computing Systems: Building a Modern Computer from First Principles</em> which covers the basic elements of a computing system, starting from hardware to the operating system down to building one’s own programming language.</p>

<p>I’ve covered the first 5 chapters on hardware, starting from fundamental logic gates to the building of the central processing unit. It took 7 days to cover the whole course as I work my ass around the chapters per day. Mostly doing the lecture videos on the morning and doing the project in the afternoon.</p>

<p>Here are my take away from that grueling 7 days of computer hardware elements exposure:</p>

<h2 id="hardware">Hardware:</h2>

<h3 id="day-1-boolean-functions-and-gate-logic">Day 1: Boolean Functions and Gate Logic</h3>

<p>The very start of the class was basic logic gates and from there it went up to multi-bit version of the basic gates. As was promised by the course, the basic starting gate of everything was the <code class="language-plaintext highlighter-rouge">Nand</code> gate - that’s why the course is called Nand2Tetris.</p>

<p>Two very important multi-way gates I first encountered was the multiplexor and the demultiplexor logic gates. They are a fundamental logic gates as they provide control to the hardware. Basically a multiplexor takes multiple output and outputs a single value. A demultiplexor, on the other hand, functions in reverse with a multiplexor. It takes a single input and output several possible outputs.</p>

<h3 id="day-2-boolean-arithmetic-and-the-alu">Day 2: Boolean Arithmetic and the ALU</h3>

<p>In this day, we build gate logic designs that represent numbers and perform arithmetic operations on them.  One of the most interesting take-away I got from this section is that the 4 basic operations on scalar numbers (addition,subtraction,multiplication,division) can just be reduced into a single operations - just addition. The subtraction is made possible by the introduction of negative numbers.</p>

<p>And the amazing part of this addition and subtraction relationship is that the addition of binary representation applies to the binary addition of negative numbers in its corresponding binary representation (signed binary numbers).</p>

<h3 id="day-3--4--memory-sequential-logic">Day 3 -4 : Memory (Sequential Logic)</h3>

<p>All chips built in day 1 and 2 were combinatorial. Combinatorial chips computes functions that depend solely on combinations of their input values. In day 2, we mainly built the ALU unit for our computers. In this day, we want to built memory.</p>

<h3 id="day-5-machine-language">Day 5: Machine Language</h3>

<p>In this day, we learn how to specify the instruction in a hardware.</p>

<p>One very important thing I learn from this class is that every key in a keyboard is just map into some numerical value that was agreed upon by some committee. The screen also was simply map into some screen memory map where every pixel coordinate in a screen corresponds to a particular memory in the RAM.</p>

<h3 id="day-6---7-computer-architecture">Day 6 - 7: Computer Architecture</h3>

<p>In this final day, we build a complete computer hardware with instruction memory, CPU and data memory with peripherals such as screen and a keyboard.</p>

<h2 id="software">Software</h2>

:ET